{"8":[8,9,8,20],"9":[1,20,1,27],"10":[6,11,6,24],"16":[11,9,11,31],"17":[1,28,1,32],"18":[8,9,8,20],"24":[7,5,7,22],"25":[1,20,1,33],"26":[11,11,11,23],"33":[1,20,1,33],"34":[11,9,11,31],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,10,4,17],"105":[4,18,4,22],"113":[4,10,4,23],"121":[4,10,4,23],"129":[4,10,4,23],"137":[5,9,5,11],"145":[5,19,5,22],"153":[5,24,5,26],"161":[5,9,5,27],"163":[5,9,5,18],"169":[5,9,5,27],"177":[5,9,5,27],"185":[6,1,6,3],"193":[6,11,6,12],"201":[6,11,6,19],"209":[6,22,6,24],"217":[6,1,6,25],"219":[6,1,6,10],"225":[6,1,6,26],"233":[7,5,7,14],"241":[7,20,7,21],"249":[7,5,7,22],"251":[7,5,7,19],"257":[8,9,8,10],"265":[8,11,8,12],"273":[8,9,8,13],"281":[8,17,8,20],"289":[9,15,9,28],"297":[9,15,9,28],"305":[9,9,9,29],"313":[11,9,11,10],"321":[11,11,11,12],"329":[11,11,11,19],"337":[11,22,11,23],"345":[11,9,11,24],"353":[11,28,11,31],"361":[12,15,12,28],"369":[12,15,12,28],"377":[12,9,12,29],"385":[14,11,14,22],"393":[14,11,14,22],"401":[14,5,14,23],"409":[1,1,15,2],"417":[1,1,15,2],"425":[1,1,15,2],"433":[1,1,15,2],"441":[1,1,15,2],"449":[8,5,10,6],"457":[11,5,13,6],"465":[7,1,15,2],"473":[1,1,15,2],"481":[1,1,15,2],"nBranches":6,"originalCodeFileName":"/home/blake/artifact/microbenchmarks/regex/anchors/both.js","instrumentedCodeFileName":"/home/blake/artifact/microbenchmarks/regex/anchors/both_jalangi_.js","code":"/* Copyright (c) Royal Holloway, University of London | Contact Blake Loring (blake@parsed.uk), Duncan Mitchell (Duncan.Mitchell.2015@rhul.ac.uk), or Johannes Kinder (johannes.kinder@rhul.ac.uk) for details or support | LICENSE.md for license details */\n\n'use strict';\nvar S$ = require('S$');\nvar q = S$.symbol(\"q\", '');\n\n//This assumption is required to make the testcase solve in reasonable time with Z3\n//This is not due to the regular expression but in fact due to the q.length and str.at\nS$.assume(q.length < 10);\n\nif (/^--.+=$/.test(q)) {\n\n\tif (q[0] != '-') {\n\t\tthrow 'Unreachable';\n\t}\n\n\tif (q[q.length - 1] != '=') {\n\t\tthrow 'Unreachable';\n\t}\n\n\tthrow 'Reachable';\n}\n"}