{"8":[11,6,11,19],"9":[6,10,6,17],"10":[11,6,11,19],"16":[15,6,15,13],"17":[6,18,6,22],"18":[15,6,15,13],"24":[19,6,19,28],"25":[6,10,6,23],"26":[19,6,19,28],"32":[9,5,9,35],"33":[6,10,6,23],"34":[28,6,28,27],"40":[28,6,28,27],"41":[6,10,6,23],"42":[32,6,32,24],"48":[32,6,32,24],"49":[7,9,7,11],"50":[36,6,36,28],"56":[36,6,36,28],"57":[7,19,7,22],"58":[40,6,40,19],"64":[40,6,40,19],"65":[7,24,7,26],"66":[57,12,57,24],"72":[26,5,26,40],"73":[7,9,7,27],"74":[59,18,59,30],"75":[7,9,7,18],"80":[49,6,49,23],"81":[7,9,7,27],"82":[59,32,59,35],"88":[47,5,47,20],"89":[7,9,7,27],"96":[60,7,60,18],"97":[9,5,9,27],"98":[59,32,59,35],"104":[59,18,59,30],"105":[9,33,9,34],"106":[60,7,60,18],"112":[56,5,56,20],"113":[9,5,9,35],"115":[9,5,9,32],"121":[11,6,11,7],"129":[11,6,11,14],"137":[11,18,11,19],"145":[12,9,12,22],"153":[12,9,12,22],"161":[12,3,12,23],"169":[15,6,15,7],"177":[15,11,15,13],"185":[16,9,16,22],"193":[16,9,16,22],"201":[16,3,16,23],"209":[19,6,19,7],"217":[19,11,19,28],"225":[20,9,20,20],"233":[20,9,20,20],"241":[20,3,20,21],"249":[23,8,23,19],"257":[23,8,23,19],"265":[23,2,23,20],"273":[26,5,26,32],"281":[26,38,26,39],"289":[26,5,26,40],"291":[26,5,26,37],"297":[28,6,28,7],"305":[28,11,28,27],"313":[29,9,29,20],"321":[29,9,29,20],"329":[29,3,29,21],"337":[32,6,32,7],"345":[32,11,32,24],"353":[33,9,33,20],"361":[33,9,33,20],"369":[33,3,33,21],"377":[36,6,36,7],"385":[36,11,36,28],"393":[37,9,37,22],"401":[37,9,37,22],"409":[37,3,37,23],"417":[40,6,40,7],"425":[40,6,40,14],"433":[40,18,40,19],"441":[41,9,41,22],"449":[41,9,41,22],"457":[41,3,41,23],"465":[44,8,44,19],"473":[44,8,44,19],"481":[44,2,44,20],"489":[47,5,47,12],"497":[47,18,47,19],"505":[47,5,47,20],"507":[47,5,47,17],"513":[49,6,49,15],"521":[49,21,49,22],"529":[49,6,49,23],"531":[49,6,49,20],"537":[50,9,50,22],"545":[50,9,50,22],"553":[50,3,50,23],"561":[53,8,53,19],"569":[53,8,53,19],"577":[53,2,53,20],"585":[56,5,56,12],"593":[56,18,56,19],"601":[56,5,56,20],"603":[56,5,56,17],"609":[57,2,57,4],"617":[57,12,57,13],"625":[57,12,57,20],"633":[57,23,57,24],"641":[57,2,57,25],"643":[57,2,57,11],"649":[57,2,57,26],"657":[59,15,59,16],"665":[59,15,59,16],"673":[59,15,59,16],"681":[59,18,59,19],"689":[59,22,59,23],"697":[59,22,59,30],"713":[59,32,59,33],"721":[59,32,59,35],"737":[60,7,60,8],"745":[60,9,60,10],"753":[60,7,60,11],"761":[60,15,60,18],"769":[61,10,61,23],"777":[61,10,61,23],"785":[61,4,61,24],"793":[65,8,65,19],"801":[65,8,65,19],"809":[65,2,65,20],"817":[68,7,68,18],"825":[68,7,68,18],"833":[68,1,68,19],"841":[1,1,68,19],"849":[1,1,68,19],"857":[1,1,68,19],"865":[1,1,68,19],"873":[11,2,13,3],"881":[15,2,17,3],"889":[19,2,21,3],"897":[9,1,24,2],"905":[28,2,30,3],"913":[32,2,34,3],"921":[36,2,38,3],"929":[40,2,42,3],"937":[26,1,45,2],"945":[49,2,51,3],"953":[47,1,54,2],"961":[60,3,62,4],"969":[59,2,63,3],"977":[59,2,63,3],"985":[56,1,66,2],"993":[1,1,68,19],"1001":[1,1,68,19],"nBranches":28,"originalCodeFileName":"/home/blake/artifact/ExpoSE/tests/regex/core/plus/lazy.js","instrumentedCodeFileName":"/home/blake/artifact/ExpoSE/tests/regex/core/plus/lazy_jalangi_.js","code":"/* Copyright (c) Royal Holloway, University of London | Contact Blake Loring (blake@parsed.uk), Duncan Mitchell (Duncan.Mitchell.2015@rhul.ac.uk), or Johannes Kinder (johannes.kinder@rhul.ac.uk) for details or support | LICENSE.md for license details */\n\n//Same as plus.js\n//Tries to show that +? and + are equivalent for test\n\nvar S$ = require('S$');\nvar x = S$.symbol(\"X\", '');\n\nif (/^(hello)+?(world)+?$/.test(x)) {\n\n\tif (x.length == 0) {\n\t\tthrow 'Unreachable';\n\t}\n\n\tif (x == '') {\n\t\tthrow 'Unreachable';\n\t}\n\n\tif (x == 'hellohelloworld') {\n\t\tthrow 'Reachable';\n\t}\n\n\tthrow 'Reachable';\n}\n\nif (/^he+?l+?l+?o_wor+?l+?d+?$/.test(x)) {\n\t\n\tif (x == 'helllllo_world') {\n\t\tthrow 'Reachable';\n\t}\n\n\tif (x == 'hello_world') {\n\t\tthrow 'Reachable';\n\t}\n\n\tif (x == 'hellooooo_world') {\n\t\tthrow 'Unreachable';\n\t}\n\n\tif (x.length == 0) {\n\t\tthrow 'Unreachable';\n\t}\n\n\tthrow 'Reachable';\n}\n\nif (/^h+?$/.test(x)) {\n\n\tif (/^[^h]+$/.test(x)) {\n\t\tthrow 'Unreachable';\n\t}\n\n\tthrow 'Reachable';\n}\n\nif (/^z+?$/.test(x)) {\n\tS$.assume(x.length < 5);\n\t\n\tfor (var i = 0; i < x.length; i++) {\n\t\tif (x[i] != 'z') {\n\t\t\tthrow 'Unreachable';\n\t\t}\n\t}\n\n\tthrow 'Reachable';\n}\n\nthrow 'Reachable';\n"}